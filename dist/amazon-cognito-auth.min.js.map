{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///amazon-cognito-auth.min.js","webpack:///webpack/bootstrap 5ae45717c9ce07a07f33","webpack:///./enhance.js","webpack:///./src/CognitoAccessToken.js","webpack:///./src/CognitoIdToken.js","webpack:///./src/CognitoRefreshToken.js","webpack:///./src/CognitoTokenScopes.js","webpack:///./src/CognitoAuthSession.js","webpack:///./src/StorageHelper.js","webpack:///./~/buffer/index.js","webpack:///./src/CognitoAuth.js","webpack:///./src/DateHelper.js","webpack:///./src/index.js","webpack:///./~/base64-js/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/isarray/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","default","defineProperty","value","_src","keys","forEach","enumerable","get","window","crypto","msCrypto","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","configurable","writable","protoProps","staticProps","_buffer","CognitoAccessToken","AccessToken","jwtToken","payload","decodePayload","accessToken","exp","username","split","JSON","parse","Buffer","from","toString","err","CognitoIdToken","IdToken","idToken","CognitoRefreshToken","RefreshToken","refreshToken","CognitoTokenScopes","TokenScopesArray","tokenScopes","_interopRequireDefault","_CognitoTokenScopes","_CognitoTokenScopes2","_CognitoAccessToken","_CognitoAccessToken2","_CognitoIdToken","_CognitoIdToken2","_CognitoRefreshToken","_CognitoRefreshToken2","CognitoAuthSession","_ref","arguments","undefined","TokenScopes","State","state","now","Math","floor","Date","getExpiration","e","dataMemory","MemoryStorage","StorageHelper","storageWindow","localStorage","setItem","removeItem","exception","global","typedArraySupport","arr","Uint8Array","__proto__","foo","subarray","byteLength","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","Error","allocUnsafe","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","checked","string","isEncoding","actual","write","slice","fromArrayLike","array","byteOffset","isBuffer","len","copy","buffer","isnan","type","isArray","data","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","n","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","charCodeAt","byteArray","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","equals","inspect","match","join","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","_typeof","iterator","constructor","_CognitoAccessToken3","_CognitoAuthSession","_CognitoAuthSession2","_StorageHelper","_StorageHelper2","CognitoAuth","ClientId","AppWebDomain","RedirectUriSignIn","RedirectUriSignOut","IdentityProvider","UserPoolId","AdvancedSecurityDataCollectionFlag","getCognitoConstants","PARAMETERERROR","clientId","appWebDomain","SCOPETYPEERROR","signInUserSession","responseType","TOKEN","storage","getStorage","setTokenScopes","getLastUser","userPoolId","advancedSecurityDataCollectionFlag","CognitoConstants","DOMAIN_SCHEME","DOMAIN_PATH_SIGNIN","DOMAIN_PATH_TOKEN","DOMAIN_PATH_SIGNOUT","DOMAIN_QUERY_PARAM_REDIRECT_URI","DOMAIN_QUERY_PARAM_SIGNOUT_URI","DOMAIN_QUERY_PARAM_RESPONSE_TYPE","DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER","DOMAIN_QUERY_PARAM_USERCONTEXTDATA","CLIENT_ID","STATE","SCOPE","CODE","POST","QUESTIONMARK","POUNDSIGN","COLONDOUBLESLASH","SLASH","AMPERSAND","EQUALSIGN","SPACE","CONTENTTYPE","CONTENTTYPEVALUE","AUTHORIZATIONCODE","IDTOKEN","ACCESSTOKEN","REFRESHTOKEN","ERROR","STRINGTYPE","STATELENGTH","STATEORIGINSTRING","WITHCREDENTIALS","UNDEFINED","SELF","HOSTNAMEREGEX","QUERYPARAMETERREGEX1","QUERYPARAMETERREGEX2","HEADER","Content-Type","lastUserKey","lastAuthUser","getItem","Username","tokenScopesInputSet","Set","cachedScopesSet","getScopes","URL","getFQDNSignIn","isValid","userhandler","onSuccess","getCachedSession","compareSets","getRefreshToken","getToken","refreshSession","launchUri","setIdToken","setAccessToken","setRefreshToken","httpRequestResponse","getCodeQueryParameter","getTokenQueryParameter","map","getQueryParameters","has","setState","codeParameter","url","getAppWebDomain","header","body","grant_type","client_id","getClientId","redirect_uri","boundOnSuccess","onSuccessExchangeForToken","bind","boundOnFailure","onFailure","makePOSTRequest","setJwtToken","setToken","cacheTokensScopes","keyPrefix","idTokenKey","accessTokenKey","refreshTokenKey","scopeKey","scopesString","scopesArray","sessionData","cachedSession","lastUserName","tokenUserName","getAccessToken","getUsername","getTokenScopes","getIdToken","getJwtToken","set1","set2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","item","return","splitMark","url2","str1","num","Map","chars","result","round","random","refresh_token","onSuccessRefreshToken","xhr","createCORSRequest","bodyString","setRequestHeader","substring","send","onreadystatechange","readyState","status","responseText","method","XMLHttpRequest","open","XDomainRequest","jsonData","jsonDataObject","id_token","access_token","tokenScopesString","encodeURIComponent","generateRandomString","identityProviderParam","getSpaceSeperatedScopeString","userContextDataParam","userContextData","getUserContextData","uri","getFQDNSignOut","clearCachedTokensScopes","AmazonCognitoAdvancedSecurityData","_username","_userpoolId","userpoolId","getData","monthNames","weekNames","DateHelper","weekDay","getUTCDay","month","getUTCMonth","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","year","getUTCFullYear","dateNow","_CognitoAuth","_DateHelper","placeHoldersCount","b64","l","tmp","placeHolders","Arr","L","revLookup","tripletToBase64","lookup","encodeChunk","uint8","output","extraBytes","parts","maxChunkLength","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","log","LN2"],"mappings":"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","file":"amazon-cognito-auth.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AmazonCognitoIdentity\"] = factory();\n\telse\n\t\troot[\"AmazonCognitoIdentity\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*!\n * Copyright 2017 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n * \n *      http://aws.amazon.com/apache2.0/\n * \n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License. \n */\n\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AmazonCognitoIdentity\"] = factory();\n\telse\n\t\troot[\"AmazonCognitoIdentity\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _src = __webpack_require__(10);\n\t\n\tObject.keys(_src).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _src[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar enhancements = _interopRequireWildcard(_src);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t// The version of crypto-browserify included by aws-sdk only\n\t// checks for window.crypto, not window.msCrypto as used by\n\t// IE 11 – so we set it explicitly here\n\t/*!\n\t * Amazon Cognito Auth SDK for JavaScript\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\t\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\n\t * You may not use this file except in compliance with the License.\n\t * A copy of the License is located at\n\t *\n\t *         http://aws.amazon.com/apache2.0/\n\t *\n\t * or in the \"license\" file accompanying this file.\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\n\t * License for the specific language governing permissions\n\t * and limitations under the License.\n\t */\n\t\n\tif (typeof window !== 'undefined' && !window.crypto && window.msCrypto) {\n\t  window.crypto = window.msCrypto;\n\t}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\tmazon Cognito Auth SDK for JavaScript\n\topyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\tn\ticensed under the Apache License, Version 2.0 (the \"License\").\n\tou may not use this file except in compliance with the License.\n\tcopy of the License is located at\n\tn\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *         http://aws.amazon.com/apache2.0/\n\tn\tor in the \"license\" file accompanying this file.\n\this file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\teither express or implied. See the\n\ticense for the specific language governing permissions\n\tand limitations under the License.\n\tn\t\n\tvar _buffer = __webpack_require__(7);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoAccessToken = function () {\n\t  /**\n\t   * Constructs a new CognitoAccessToken object\n\t   * @param {string=} AccessToken The JWT access token.\n\t   */\n\t  function CognitoAccessToken(AccessToken) {\n\t    _classCallCheck(this, CognitoAccessToken);\n\t\n\t    // Assign object\n\t    this.jwtToken = AccessToken || '';\n\t    this.payload = this.decodePayload();\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's token.\n\t   */\n\t\n\t\n\t  _createClass(CognitoAccessToken, [{\n\t    key: 'getJwtToken',\n\t    value: function getJwtToken() {\n\t      return this.jwtToken;\n\t    }\n\t\n\t    /**\n\t     * Sets new value for access token.\n\t     * @param {string=} accessToken The JWT access token.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setJwtToken',\n\t    value: function setJwtToken(accessToken) {\n\t      this.jwtToken = accessToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {int} the token's expiration (exp member).\n\t     */\n\t\n\t  }, {\n\t    key: 'getExpiration',\n\t    value: function getExpiration() {\n\t      return this.payload.exp;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the username from payload.\n\t     */\n\t\n\t  }, {\n\t    key: 'getUsername',\n\t    value: function getUsername() {\n\t      if (this.jwtToken === null) {\n\t        return undefined;\n\t      }\n\t      return this.payload.username;\n\t    }\n\t\n\t    /**\n\t     * @returns {object} the token's payload.\n\t     */\n\t\n\t  }, {\n\t    key: 'decodePayload',\n\t    value: function decodePayload() {\n\t      var payload = this.jwtToken.split('.')[1];\n\t      try {\n\t        return JSON.parse(_buffer.Buffer.from(payload, 'base64').toString('utf8'));\n\t      } catch (err) {\n\t        return {};\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return CognitoAccessToken;\n\t}();\n\t\n\texports.default = CognitoAccessToken;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\tmazon Cognito Auth SDK for JavaScript\n\topyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\tn\ticensed under the Apache License, Version 2.0 (the \"License\").\n\tou may not use this file except in compliance with the License.\n\tcopy of the License is located at\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\n\thttp://aws.amazon.com/apache2.0/\n\tn\tor in the \"license\" file accompanying this file.\n\this file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\teither express or implied. See the\n\ticense for the specific language governing permissions\n\tand limitations under the License.\n\tn\t\n\tvar _buffer = __webpack_require__(7);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoIdToken = function () {\n\t  /**\n\t   * Constructs a new CognitoIdToken object\n\t   * @param {string=} IdToken The JWT Id token\n\t   */\n\t  function CognitoIdToken(IdToken) {\n\t    _classCallCheck(this, CognitoIdToken);\n\t\n\t    // Assign object\n\t    this.jwtToken = IdToken || '';\n\t    this.payload = this.decodePayload();\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's token.\n\t   */\n\t\n\t\n\t  _createClass(CognitoIdToken, [{\n\t    key: 'getJwtToken',\n\t    value: function getJwtToken() {\n\t      return this.jwtToken;\n\t    }\n\t\n\t    /**\n\t     * Sets new value for id token.\n\t     * @param {string=} idToken The JWT Id token\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setJwtToken',\n\t    value: function setJwtToken(idToken) {\n\t      this.jwtToken = idToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {int} the token's expiration (exp member).\n\t     */\n\t\n\t  }, {\n\t    key: 'getExpiration',\n\t    value: function getExpiration() {\n\t      return this.payload.exp;\n\t    }\n\t\n\t    /**\n\t     * @returns {object} the token's payload.\n\t     */\n\t\n\t  }, {\n\t    key: 'decodePayload',\n\t    value: function decodePayload() {\n\t      var payload = this.jwtToken.split('.')[1];\n\t      try {\n\t        return JSON.parse(_buffer.Buffer.from(payload, 'base64').toString('utf8'));\n\t      } catch (err) {\n\t        return {};\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return CognitoIdToken;\n\t}();\n\t\n\texports.default = CognitoIdToken;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Amazon Cognito Auth SDK for JavaScript\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\t\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\n\t * You may not use this file except in compliance with the License.\n\t * A copy of the License is located at\n\t *\n\t *         http://aws.amazon.com/apache2.0/\n\t *\n\t * or in the \"license\" file accompanying this file.\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\n\t * License for the specific language governing permissions\n\t * and limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar CognitoRefreshToken = function () {\n\t  /**\n\t   * Constructs a new CognitoRefreshToken object\n\t   * @param {string=} RefreshToken The JWT refresh token.\n\t   */\n\t  function CognitoRefreshToken(RefreshToken) {\n\t    _classCallCheck(this, CognitoRefreshToken);\n\t\n\t    // Assign object\n\t    this.refreshToken = RefreshToken || '';\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's token.\n\t   */\n\t\n\t\n\t  _createClass(CognitoRefreshToken, [{\n\t    key: 'getToken',\n\t    value: function getToken() {\n\t      return this.refreshToken;\n\t    }\n\t\n\t    /**\n\t     * Sets new value for refresh token.\n\t     * @param {string=} refreshToken The JWT refresh token.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setToken',\n\t    value: function setToken(refreshToken) {\n\t      this.refreshToken = refreshToken;\n\t    }\n\t  }]);\n\t\n\t  return CognitoRefreshToken;\n\t}();\n\t\n\texports.default = CognitoRefreshToken;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Amazon Cognito Auth SDK for JavaScript\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\t\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\n\t * You may not use this file except in compliance with the License.\n\t * A copy of the License is located at\n\t *\n\t *         http://aws.amazon.com/apache2.0/\n\t *\n\t * or in the \"license\" file accompanying this file.\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\n\t * License for the specific language governing permissions\n\t * and limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar CognitoTokenScopes = function () {\n\t  /**\n\t   * Constructs a new CognitoTokenScopes object\n\t   * @param {array=} TokenScopesArray The token scopes\n\t   */\n\t  function CognitoTokenScopes(TokenScopesArray) {\n\t    _classCallCheck(this, CognitoTokenScopes);\n\t\n\t    // Assign object\n\t    this.tokenScopes = TokenScopesArray || [];\n\t  }\n\t\n\t  /**\n\t   * @returns {Array} the token scopes.\n\t   */\n\t\n\t\n\t  _createClass(CognitoTokenScopes, [{\n\t    key: \"getScopes\",\n\t    value: function getScopes() {\n\t      return this.tokenScopes;\n\t    }\n\t\n\t    /**\n\t     * Sets new value for token scopes.\n\t     * @param {array=} tokenScopes The token scopes\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: \"setTokenScopes\",\n\t    value: function setTokenScopes(tokenScopes) {\n\t      this.tokenScopes = tokenScopes;\n\t    }\n\t  }]);\n\t\n\t  return CognitoTokenScopes;\n\t}();\n\t\n\texports.default = CognitoTokenScopes;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\tmazon Cognito Auth SDK for JavaScript\n\topyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n\ticensed under the Apache License, Version 2.0 (the \"License\").\n\tou may not use this file except in compliance with the License.\n\tcopy of the License is located at\n\tn\thttp://aws.amazon.com/apache2.0/\n\tn\tor in the \"license\" file accompanying this file.\n\this file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\teither express or implied. See the\n\ticense for the specific language governing permissions\n\tand limitations under the License.\n\tn\t\n\tvar _CognitoTokenScopes = __webpack_require__(4);\n\t\n\tvar _CognitoTokenScopes2 = _interopRequireDefault(_CognitoTokenScopes);\n\t\n\tvar _CognitoAccessToken = __webpack_require__(1);\n\t\n\tvar _CognitoAccessToken2 = _interopRequireDefault(_CognitoAccessToken);\n\t\n\tvar _CognitoIdToken = __webpack_require__(2);\n\t\n\tvar _CognitoIdToken2 = _interopRequireDefault(_CognitoIdToken);\n\t\n\tvar _CognitoRefreshToken = __webpack_require__(3);\n\t\n\tvar _CognitoRefreshToken2 = _interopRequireDefault(_CognitoRefreshToken);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoAuthSession = function () {\n\t  /**\n\t   * Constructs a new CognitoUserSession object\n\t   * @param {CognitoIdToken} IdToken The session's Id token.\n\t   * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\n\t   * @param {CognitoAccessToken} AccessToken The session's access token.\n\t   * @param {array}  TokenScopes  The session's token scopes.\n\t    * @param {string} State The session's state. \n\t   */\n\t  function CognitoAuthSession() {\n\t    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t        IdToken = _ref.IdToken,\n\t        RefreshToken = _ref.RefreshToken,\n\t        AccessToken = _ref.AccessToken,\n\t        TokenScopes = _ref.TokenScopes,\n\t        State = _ref.State;\n\t\n\t    _classCallCheck(this, CognitoAuthSession);\n\t\n\t    if (IdToken) {\n\t      this.idToken = IdToken;\n\t    } else {\n\t      this.idToken = new _CognitoIdToken2.default();\n\t    }\n\t    if (RefreshToken) {\n\t      this.refreshToken = RefreshToken;\n\t    } else {\n\t      this.refreshToken = new _CognitoRefreshToken2.default();\n\t    }\n\t    if (AccessToken) {\n\t      this.accessToken = AccessToken;\n\t    } else {\n\t      this.accessToken = new _CognitoAccessToken2.default();\n\t    }\n\t    if (TokenScopes) {\n\t      this.tokenScopes = TokenScopes;\n\t    } else {\n\t      this.tokenScopes = new _CognitoTokenScopes2.default();\n\t    }\n\t    if (State) {\n\t      this.state = State;\n\t    } else {\n\t      this.state = null;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @returns {CognitoIdToken} the session's Id token\n\t   */\n\t\n\t\n\t  _createClass(CognitoAuthSession, [{\n\t    key: 'getIdToken',\n\t    value: function getIdToken() {\n\t      return this.idToken;\n\t    }\n\t\n\t    /**\n\t     * Set a new Id token\n\t     * @param {CognitoIdToken} IdToken The session's Id token.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setIdToken',\n\t    value: function setIdToken(IdToken) {\n\t      this.idToken = IdToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {CognitoRefreshToken} the session's refresh token\n\t     */\n\t\n\t  }, {\n\t    key: 'getRefreshToken',\n\t    value: function getRefreshToken() {\n\t      return this.refreshToken;\n\t    }\n\t\n\t    /**\n\t     * Set a new Refresh token\n\t     * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setRefreshToken',\n\t    value: function setRefreshToken(RefreshToken) {\n\t      this.refreshToken = RefreshToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {CognitoAccessToken} the session's access token\n\t     */\n\t\n\t  }, {\n\t    key: 'getAccessToken',\n\t    value: function getAccessToken() {\n\t      return this.accessToken;\n\t    }\n\t\n\t    /**\n\t     * Set a new Access token\n\t     * @param {CognitoAccessToken} AccessToken The session's access token.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setAccessToken',\n\t    value: function setAccessToken(AccessToken) {\n\t      this.accessToken = AccessToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {CognitoTokenScopes} the session's token scopes\n\t     */\n\t\n\t  }, {\n\t    key: 'getTokenScopes',\n\t    value: function getTokenScopes() {\n\t      return this.tokenScopes;\n\t    }\n\t\n\t    /**\n\t     * Set new token scopes\n\t     * @param {array}  tokenScopes  The session's token scopes.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setTokenScopes',\n\t    value: function setTokenScopes(tokenScopes) {\n\t      this.tokenScopes = tokenScopes;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the session's state\n\t     */\n\t\n\t  }, {\n\t    key: 'getState',\n\t    value: function getState() {\n\t      return this.state;\n\t    }\n\t\n\t    /**\n\t     * Set new state\n\t     * @param {string}  state  The session's state.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setState',\n\t    value: function setState(State) {\n\t      this.state = State;\n\t    }\n\t\n\t    /**\n\t     * Checks to see if the session is still valid based on session expiry information found\n\t     * in Access and Id Tokens and the current time\n\t     * @returns {boolean} if the session is still valid\n\t     */\n\t\n\t  }, {\n\t    key: 'isValid',\n\t    value: function isValid() {\n\t      var now = Math.floor(new Date() / 1000);\n\t      try {\n\t        if (this.accessToken != null) {\n\t          return now < this.accessToken.getExpiration();\n\t        }\n\t        if (this.idToken != null) {\n\t          return now < this.idToken.getExpiration();\n\t        }\n\t        return false;\n\t      } catch (e) {\n\t        return false;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return CognitoAuthSession;\n\t}();\n\t\n\texports.default = CognitoAuthSession;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Amazon Cognito Auth SDK for JavaScript\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\t\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\n\t * You may not use this file except in compliance with the License.\n\t * A copy of the License is located at\n\t *\n\t *         http://aws.amazon.com/apache2.0/\n\t *\n\t * or in the \"license\" file accompanying this file.\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\n\t * License for the specific language governing permissions\n\t * and limitations under the License.\n\t */\n\tvar dataMemory = {};\n\t\n\t/** @class */\n\t\n\tvar MemoryStorage = function () {\n\t  function MemoryStorage() {\n\t    _classCallCheck(this, MemoryStorage);\n\t  }\n\t\n\t  _createClass(MemoryStorage, null, [{\n\t    key: 'setItem',\n\t\n\t\n\t    /**\n\t     * This is used to set a specific item in storage\n\t     * @param {string} key - the key for the item\n\t     * @param {object} value - the value\n\t     * @returns {string} value that was set\n\t     */\n\t    value: function setItem(key, value) {\n\t      dataMemory[key] = value;\n\t      return dataMemory[key];\n\t    }\n\t\n\t    /**\n\t     * This is used to get a specific key from storage\n\t     * @param {string} key - the key for the item\n\t     * This is used to clear the storage\n\t     * @returns {string} the data item\n\t     */\n\t\n\t  }, {\n\t    key: 'getItem',\n\t    value: function getItem(key) {\n\t      return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to remove an item from storage\n\t     * @param {string} key - the key being set\n\t     * @returns {string} value - value that was deleted\n\t     */\n\t\n\t  }, {\n\t    key: 'removeItem',\n\t    value: function removeItem(key) {\n\t      return delete dataMemory[key];\n\t    }\n\t\n\t    /**\n\t     * This is used to clear the storage\n\t     * @returns {string} nothing\n\t     */\n\t\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      dataMemory = {};\n\t      return dataMemory;\n\t    }\n\t  }]);\n\t\n\t  return MemoryStorage;\n\t}();\n\t\n\t/** @class */\n\t\n\t\n\tvar StorageHelper = function () {\n\t\n\t  /**\n\t   * This is used to get a storage object\n\t   * @returns {object} the storage\n\t   */\n\t  function StorageHelper() {\n\t    _classCallCheck(this, StorageHelper);\n\t\n\t    try {\n\t      this.storageWindow = window.localStorage;\n\t      this.storageWindow.setItem('aws.cognito.test-ls', 1);\n\t      this.storageWindow.removeItem('aws.cognito.test-ls');\n\t    } catch (exception) {\n\t      this.storageWindow = MemoryStorage;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * This is used to return the storage\n\t   * @returns {object} the storage\n\t   */\n\t\n\t\n\t  _createClass(StorageHelper, [{\n\t    key: 'getStorage',\n\t    value: function getStorage() {\n\t      return this.storageWindow;\n\t    }\n\t  }]);\n\t\n\t  return StorageHelper;\n\t}();\n\t\n\texports.default = StorageHelper;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(11)\n\tvar ieee754 = __webpack_require__(12)\n\tvar isArray = __webpack_require__(13)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\tmazon Cognito Auth SDK for JavaScript\n\topyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       * Licensed under the Apache License, Version 2.0 (the \"License\").\n\tou may not use this file except in compliance with the License.\n\tcopy of the License is located at\n\tn\thttp://aws.amazon.com/apache2.0/\n\tn\tor in the \"license\" file accompanying this file.\n\this file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\teither express or implied. See the\n\ticense for the specific language governing permissions\n\tand limitations under the License.\n\tn\t\n\tvar _CognitoTokenScopes = __webpack_require__(4);\n\t\n\tvar _CognitoTokenScopes2 = _interopRequireDefault(_CognitoTokenScopes);\n\t\n\tvar _CognitoAccessToken = __webpack_require__(1);\n\t\n\tvar _CognitoAccessToken3 = _interopRequireDefault(_CognitoAccessToken);\n\t\n\tvar _CognitoIdToken = __webpack_require__(2);\n\t\n\tvar _CognitoIdToken2 = _interopRequireDefault(_CognitoIdToken);\n\t\n\tvar _CognitoRefreshToken = __webpack_require__(3);\n\t\n\tvar _CognitoRefreshToken2 = _interopRequireDefault(_CognitoRefreshToken);\n\t\n\tvar _CognitoAuthSession = __webpack_require__(5);\n\t\n\tvar _CognitoAuthSession2 = _interopRequireDefault(_CognitoAuthSession);\n\t\n\tvar _StorageHelper = __webpack_require__(6);\n\t\n\tvar _StorageHelper2 = _interopRequireDefault(_StorageHelper);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoAuth = function () {\n\t  /**\n\t   * Constructs a new CognitoAuth object\n\t   * @param {object} data Creation options\n\t   * @param {string} data.ClientId Required: User pool application client id.\n\t   * @param {string} data.AppWebDomain Required: The application/user-pools Cognito web hostname,\n\t   *                     this is set at the Cognito console.\n\t   * @param {array} data.TokenScopesArray Optional: The token scopes\n\t   * @param {string} data.RedirectUriSignIn Required: The redirect Uri,\n\t   * which will be launched after authentication as signed in.\n\t   * @param {string} data.RedirectUriSignOut Required:\n\t   * The redirect Uri, which will be launched when signed out.\n\t   * @param {string} data.IdentityProvider Optional: Pre-selected identity provider (this allows to\n\t   * automatically trigger social provider authentication flow).\n\t   * @param {string} data.UserPoolId Optional: UserPoolId for the configured cognito userPool.\n\t   * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional: boolean flag indicating if the\n\t   *        data collection is enabled to support cognito advanced security features. By default, this\n\t   *        flag is set to true.\n\t   * @param {nodeCallback<CognitoAuthSession>} Optional: userhandler Called on success or error.\n\t   */\n\t  function CognitoAuth(data) {\n\t    _classCallCheck(this, CognitoAuth);\n\t\n\t    var _ref = data || {},\n\t        ClientId = _ref.ClientId,\n\t        AppWebDomain = _ref.AppWebDomain,\n\t        TokenScopesArray = _ref.TokenScopesArray,\n\t        RedirectUriSignIn = _ref.RedirectUriSignIn,\n\t        RedirectUriSignOut = _ref.RedirectUriSignOut,\n\t        IdentityProvider = _ref.IdentityProvider,\n\t        UserPoolId = _ref.UserPoolId,\n\t        AdvancedSecurityDataCollectionFlag = _ref.AdvancedSecurityDataCollectionFlag;\n\t\n\t    if (data == null || !ClientId || !AppWebDomain || !RedirectUriSignIn || !RedirectUriSignOut) {\n\t      throw new Error(this.getCognitoConstants().PARAMETERERROR);\n\t    }\n\t\n\t    this.clientId = ClientId;\n\t    this.appWebDomain = AppWebDomain;\n\t    this.TokenScopesArray = TokenScopesArray || [];\n\t    if (!Array.isArray(TokenScopesArray)) {\n\t      throw new Error(this.getCognitoConstants().SCOPETYPEERROR);\n\t    }\n\t    var tokenScopes = new _CognitoTokenScopes2.default(this.TokenScopesArray);\n\t    this.RedirectUriSignIn = RedirectUriSignIn;\n\t    this.RedirectUriSignOut = RedirectUriSignOut;\n\t    this.IdentityProvider = IdentityProvider;\n\t    this.signInUserSession = new _CognitoAuthSession2.default();\n\t    this.responseType = this.getCognitoConstants().TOKEN;\n\t    this.storage = new _StorageHelper2.default().getStorage();\n\t    this.signInUserSession.setTokenScopes(tokenScopes);\n\t    this.username = this.getLastUser();\n\t    this.userPoolId = UserPoolId;\n\t\n\t    /**\n\t     * By default, AdvancedSecurityDataCollectionFlag is set to true, if no input value is provided.\n\t     */\n\t    this.advancedSecurityDataCollectionFlag = true;\n\t    if (AdvancedSecurityDataCollectionFlag) {\n\t      this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @returns {JSON} the constants\n\t   */\n\t\n\t\n\t  _createClass(CognitoAuth, [{\n\t    key: 'getCognitoConstants',\n\t    value: function getCognitoConstants() {\n\t      var CognitoConstants = {\n\t        DOMAIN_SCHEME: 'https',\n\t        DOMAIN_PATH_SIGNIN: 'oauth2/authorize',\n\t        DOMAIN_PATH_TOKEN: 'oauth2/token',\n\t        DOMAIN_PATH_SIGNOUT: 'logout',\n\t        DOMAIN_QUERY_PARAM_REDIRECT_URI: 'redirect_uri',\n\t        DOMAIN_QUERY_PARAM_SIGNOUT_URI: 'logout_uri',\n\t        DOMAIN_QUERY_PARAM_RESPONSE_TYPE: 'response_type',\n\t        DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER: 'identity_provider',\n\t        DOMAIN_QUERY_PARAM_USERCONTEXTDATA: 'userContextData',\n\t        CLIENT_ID: 'client_id',\n\t        STATE: 'state',\n\t        SCOPE: 'scope',\n\t        TOKEN: 'token',\n\t        CODE: 'code',\n\t        POST: 'POST',\n\t        PARAMETERERROR: 'The parameters: App client Id, App web domain' + ', the redirect URL when you are signed in and the ' + 'redirect URL when you are signed out are required.',\n\t        SCOPETYPEERROR: 'Scopes have to be array type. ',\n\t        QUESTIONMARK: '?',\n\t        POUNDSIGN: '#',\n\t        COLONDOUBLESLASH: '://',\n\t        SLASH: '/',\n\t        AMPERSAND: '&',\n\t        EQUALSIGN: '=',\n\t        SPACE: ' ',\n\t        CONTENTTYPE: 'Content-Type',\n\t        CONTENTTYPEVALUE: 'application/x-www-form-urlencoded',\n\t        AUTHORIZATIONCODE: 'authorization_code',\n\t        IDTOKEN: 'id_token',\n\t        ACCESSTOKEN: 'access_token',\n\t        REFRESHTOKEN: 'refresh_token',\n\t        ERROR: 'error',\n\t        STRINGTYPE: 'string',\n\t        STATELENGTH: 32,\n\t        STATEORIGINSTRING: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n\t        WITHCREDENTIALS: 'withCredentials',\n\t        UNDEFINED: 'undefined',\n\t        SELF: '_self',\n\t        HOSTNAMEREGEX: /:\\/\\/([0-9]?\\.)?(.[^/:]+)/i,\n\t        QUERYPARAMETERREGEX1: /#(.+)/,\n\t        QUERYPARAMETERREGEX2: /=(.+)/,\n\t        HEADER: { 'Content-Type': 'application/x-www-form-urlencoded' }\n\t      };\n\t      return CognitoConstants;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the client id\n\t     */\n\t\n\t  }, {\n\t    key: 'getClientId',\n\t    value: function getClientId() {\n\t      return this.clientId;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the app web domain\n\t     */\n\t\n\t  }, {\n\t    key: 'getAppWebDomain',\n\t    value: function getAppWebDomain() {\n\t      return this.appWebDomain;\n\t    }\n\t\n\t    /**\n\t     * method for getting the current user of the application from the local storage\n\t     *\n\t     * @returns {CognitoAuth} the user retrieved from storage\n\t     */\n\t\n\t  }, {\n\t    key: 'getCurrentUser',\n\t    value: function getCurrentUser() {\n\t      var lastUserKey = 'CognitoIdentityServiceProvider.' + this.clientId + '.LastAuthUser';\n\t\n\t      var lastAuthUser = this.storage.getItem(lastUserKey);\n\t      return lastAuthUser;\n\t    }\n\t\n\t    /**\n\t     * @param {string} Username the user's name\n\t     * method for setting the current user's name\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setUser',\n\t    value: function setUser(Username) {\n\t      this.username = Username;\n\t    }\n\t\n\t    /**\n\t     * sets response type to 'code'\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'useCodeGrantFlow',\n\t    value: function useCodeGrantFlow() {\n\t      this.responseType = this.getCognitoConstants().CODE;\n\t    }\n\t\n\t    /**\n\t     * sets response type to 'token'\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'useImplicitFlow',\n\t    value: function useImplicitFlow() {\n\t      this.responseType = this.getCognitoConstants().TOKEN;\n\t    }\n\t\n\t    /**\n\t     * @returns {CognitoAuthSession} the current session for this user\n\t     */\n\t\n\t  }, {\n\t    key: 'getSignInUserSession',\n\t    value: function getSignInUserSession() {\n\t      return this.signInUserSession;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the user's username\n\t     */\n\t\n\t  }, {\n\t    key: 'getUsername',\n\t    value: function getUsername() {\n\t      return this.username;\n\t    }\n\t\n\t    /**\n\t     * @param {string} Username the user's username\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setUsername',\n\t    value: function setUsername(Username) {\n\t      this.username = Username;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the user's state\n\t     */\n\t\n\t  }, {\n\t    key: 'getState',\n\t    value: function getState() {\n\t      return this.state;\n\t    }\n\t\n\t    /**\n\t     * @param {string} State the user's state\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setState',\n\t    value: function setState(State) {\n\t      this.state = State;\n\t    }\n\t\n\t    /**\n\t     * This is used to get a session, either from the session object\n\t     * or from the local storage, or by using a refresh token\n\t     * @param {string} RedirectUriSignIn Required: The redirect Uri,\n\t     * which will be launched after authentication.\n\t     * @param {array} TokenScopesArray Required: The token scopes, it is an\n\t     * array of strings specifying all scopes for the tokens.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'getSession',\n\t    value: function getSession() {\n\t      var tokenScopesInputSet = new Set(this.TokenScopesArray);\n\t      var cachedScopesSet = new Set(this.signInUserSession.tokenScopes.getScopes());\n\t      var URL = this.getFQDNSignIn();\n\t      if (this.signInUserSession != null && this.signInUserSession.isValid()) {\n\t        return this.userhandler.onSuccess(this.signInUserSession);\n\t      }\n\t      this.signInUserSession = this.getCachedSession();\n\t      // compare scopes\n\t      if (!this.compareSets(tokenScopesInputSet, cachedScopesSet)) {\n\t        var tokenScopes = new _CognitoTokenScopes2.default(this.TokenScopesArray);\n\t        var idToken = new _CognitoIdToken2.default();\n\t        var accessToken = new _CognitoAccessToken3.default();\n\t        var refreshToken = new _CognitoRefreshToken2.default();\n\t        this.signInUserSession.setTokenScopes(tokenScopes);\n\t        this.signInUserSession.setIdToken(idToken);\n\t        this.signInUserSession.setAccessToken(accessToken);\n\t        this.signInUserSession.setRefreshToken(refreshToken);\n\t        this.launchUri(URL);\n\t      } else if (this.signInUserSession.isValid()) {\n\t        return this.userhandler.onSuccess(this.signInUserSession);\n\t      } else if (!this.signInUserSession.getRefreshToken() || !this.signInUserSession.getRefreshToken().getToken()) {\n\t        this.launchUri(URL);\n\t      } else {\n\t        this.refreshSession(this.signInUserSession.getRefreshToken().getToken());\n\t      }\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * @param {string} httpRequestResponse the http request response\n\t     * @returns {void}\n\t     * Parse the http request response and proceed according to different response types.\n\t     */\n\t\n\t  }, {\n\t    key: 'parseCognitoWebResponse',\n\t    value: function parseCognitoWebResponse(httpRequestResponse) {\n\t      if (httpRequestResponse.indexOf(this.getCognitoConstants().QUESTIONMARK) > -1) {\n\t        this.getCodeQueryParameter(httpRequestResponse);\n\t      } else if (httpRequestResponse.indexOf(this.getCognitoConstants().POUNDSIGN) > -1) {\n\t        // To parse the response to get tokens\n\t        this.getTokenQueryParameter(httpRequestResponse);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * @param {string} httpRequestResponse the http request response\n\t     * @returns {void}\n\t     * Parse the http request response and proceed according to code response type.\n\t     */\n\t\n\t  }, {\n\t    key: 'getCodeQueryParameter',\n\t    value: function getCodeQueryParameter(httpRequestResponse) {\n\t      var map = this.getQueryParameters(httpRequestResponse, this.getCognitoConstants().QUESTIONMARK);\n\t      var state = null;\n\t      if (map.has(this.getCognitoConstants().STATE)) {\n\t        this.signInUserSession.setState(map.get(this.getCognitoConstants().STATE));\n\t      } else {\n\t        this.signInUserSession.setState(state);\n\t      }\n\t\n\t      if (map.has(this.getCognitoConstants().CODE)) {\n\t        // if the response contains code\n\t        // To parse the response and get the code value.\n\t        var codeParameter = map.get(this.getCognitoConstants().CODE);\n\t        var url = this.getCognitoConstants().DOMAIN_SCHEME.concat(this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(), this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_TOKEN);\n\t        var header = this.getCognitoConstants().HEADER;\n\t        var body = { grant_type: this.getCognitoConstants().AUTHORIZATIONCODE,\n\t          client_id: this.getClientId(),\n\t          redirect_uri: this.RedirectUriSignIn,\n\t          code: codeParameter };\n\t        var boundOnSuccess = this.onSuccessExchangeForToken.bind(this);\n\t        var boundOnFailure = this.onFailure.bind(this);\n\t        this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Parse the http request response and proceed according to token response type.\n\t     * @param {string} httpRequestResponse the http request response\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'getTokenQueryParameter',\n\t    value: function getTokenQueryParameter(httpRequestResponse) {\n\t      var map = this.getQueryParameters(httpRequestResponse, this.getCognitoConstants().QUERYPARAMETERREGEX1);\n\t      var idToken = new _CognitoIdToken2.default();\n\t      var accessToken = new _CognitoAccessToken3.default();\n\t      var refreshToken = new _CognitoRefreshToken2.default();\n\t      var state = null;\n\t      if (map.has(this.getCognitoConstants().IDTOKEN)) {\n\t        idToken.setJwtToken(map.get(this.getCognitoConstants().IDTOKEN));\n\t        this.signInUserSession.setIdToken(idToken);\n\t      } else {\n\t        this.signInUserSession.setIdToken(idToken);\n\t      }\n\t      if (map.has(this.getCognitoConstants().ACCESSTOKEN)) {\n\t        this.signInUserSession.setAccessToken(new _CognitoAccessToken2.default(map.get(this.getCognitoConstants().ACCESSTOKEN)));\n\t      } else {\n\t        this.signInUserSession.setAccessToken(accessToken);\n\t      }\n\t      if (map.has(this.getCognitoConstants().REFRESHTOKEN)) {\n\t        refreshToken.setToken(map.get(this.getCognitoConstants().REFRESHTOKEN));\n\t        this.signInUserSession.setRefreshToken(refreshToken);\n\t      } else {\n\t        this.signInUserSession.setRefreshToken(refreshToken);\n\t      }\n\t      if (map.has(this.getCognitoConstants().STATE)) {\n\t        this.signInUserSession.setState(map.get(this.getCognitoConstants().STATE));\n\t      } else {\n\t        this.signInUserSession.setState(state);\n\t      }\n\t      this.cacheTokensScopes();\n\t      return this.userhandler.onSuccess(this.signInUserSession);\n\t    }\n\t\n\t    /**\n\t     * Get cached tokens and scopes and return a new session using all the cached data.\n\t     * @returns {CognitoAuthSession} the auth session\n\t     */\n\t\n\t  }, {\n\t    key: 'getCachedSession',\n\t    value: function getCachedSession() {\n\t      if (!this.username) {\n\t        return new _CognitoAuthSession2.default();\n\t      }\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.getClientId() + '.' + this.username;\n\t      var idTokenKey = keyPrefix + '.idToken';\n\t      var accessTokenKey = keyPrefix + '.accessToken';\n\t      var refreshTokenKey = keyPrefix + '.refreshToken';\n\t      var scopeKey = keyPrefix + '.tokenScopesString';\n\t\n\t      var scopesString = this.storage.getItem(scopeKey);\n\t      var scopesArray = [];\n\t      if (scopesString) {\n\t        scopesArray = scopesString.split(' ');\n\t      }\n\t      var tokenScopes = new _CognitoTokenScopes2.default(scopesArray);\n\t      var idToken = new _CognitoIdToken2.default(this.storage.getItem(idTokenKey));\n\t      var accessToken = new _CognitoAccessToken3.default(this.storage.getItem(accessTokenKey));\n\t      var refreshToken = new _CognitoRefreshToken2.default(this.storage.getItem(refreshTokenKey));\n\t\n\t      var sessionData = {\n\t        IdToken: idToken,\n\t        AccessToken: accessToken,\n\t        RefreshToken: refreshToken,\n\t        TokenScopes: tokenScopes\n\t      };\n\t      var cachedSession = new _CognitoAuthSession2.default(sessionData);\n\t      return cachedSession;\n\t    }\n\t\n\t    /**\n\t     * This is used to get last signed in user from local storage\n\t     * @returns {string} the last user name\n\t     */\n\t\n\t  }, {\n\t    key: 'getLastUser',\n\t    value: function getLastUser() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.getClientId();\n\t      var lastUserKey = keyPrefix + '.LastAuthUser';\n\t      var lastUserName = this.storage.getItem(lastUserKey);\n\t      if (lastUserName) {\n\t        return lastUserName;\n\t      }\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to save the session tokens and scopes to local storage\n\t     * Input parameter is a set of strings.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'cacheTokensScopes',\n\t    value: function cacheTokensScopes() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.getClientId();\n\t      var tokenUserName = this.signInUserSession.getAccessToken().getUsername();\n\t      this.username = tokenUserName;\n\t      var idTokenKey = keyPrefix + '.' + tokenUserName + '.idToken';\n\t      var accessTokenKey = keyPrefix + '.' + tokenUserName + '.accessToken';\n\t      var refreshTokenKey = keyPrefix + '.' + tokenUserName + '.refreshToken';\n\t      var lastUserKey = keyPrefix + '.LastAuthUser';\n\t      var scopeKey = keyPrefix + '.' + tokenUserName + '.tokenScopesString';\n\t      var scopesArray = this.signInUserSession.getTokenScopes().getScopes();\n\t      var scopesString = scopesArray.join(' ');\n\t      this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n\t      this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n\t      this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n\t      this.storage.setItem(lastUserKey, tokenUserName);\n\t      this.storage.setItem(scopeKey, scopesString);\n\t    }\n\t\n\t    /**\n\t     * Compare two sets if they are identical.\n\t     * @param {set} set1 one set\n\t     * @param {set} set2 the other set\n\t     * @returns {boolean} boolean value is true if two sets are identical\n\t     */\n\t\n\t  }, {\n\t    key: 'compareSets',\n\t    value: function compareSets(set1, set2) {\n\t      if (set1.size !== set2.size) {\n\t        return false;\n\t      }\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = set1[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var item = _step.value;\n\t\n\t          if (!set2.has(item)) {\n\t            return false;\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * @param {string} url the url string\n\t     * Get the hostname from url.\n\t     * @returns {string} hostname string\n\t     */\n\t\n\t  }, {\n\t    key: 'getHostName',\n\t    value: function getHostName(url) {\n\t      var match = url.match(this.getCognitoConstants().HOSTNAMEREGEX);\n\t      if (match != null && match.length > 2 && _typeof(match[2]) === this.getCognitoConstants().STRINGTYPE && match[2].length > 0) {\n\t        return match[2];\n\t      }\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * Get http query parameters and return them as a map.\n\t     * @param {string} url the url string\n\t     * @param {string} splitMark query parameters split mark (prefix)\n\t     * @returns {map} map\n\t     */\n\t\n\t  }, {\n\t    key: 'getQueryParameters',\n\t    value: function getQueryParameters(url, splitMark) {\n\t      var str = String(url).split(splitMark);\n\t      var url2 = str[1];\n\t      var str1 = String(url2).split(this.getCognitoConstants().AMPERSAND);\n\t      var num = str1.length;\n\t      var map = new Map();\n\t      var i = void 0;\n\t      for (i = 0; i < num; i++) {\n\t        str1[i] = String(str1[i]).split(this.getCognitoConstants().QUERYPARAMETERREGEX2);\n\t        map.set(str1[i][0], str1[i][1]);\n\t      }\n\t      return map;\n\t    }\n\t\n\t    /**\n\t     * helper function to generate a random string\n\t     * @param {int} length the length of string\n\t     * @param {string} chars a original string\n\t     * @returns {string} a random value.\n\t     */\n\t\n\t  }, {\n\t    key: 'generateRandomString',\n\t    value: function generateRandomString(length, chars) {\n\t      var result = '';\n\t      var i = length;\n\t      for (; i > 0; --i) {\n\t        result += chars[Math.round(Math.random() * (chars.length - 1))];\n\t      }return result;\n\t    }\n\t\n\t    /**\n\t     * This is used to clear the session tokens and scopes from local storage\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'clearCachedTokensScopes',\n\t    value: function clearCachedTokensScopes() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.getClientId();\n\t      var idTokenKey = keyPrefix + '.' + this.username + '.idToken';\n\t      var accessTokenKey = keyPrefix + '.' + this.username + '.accessToken';\n\t      var refreshTokenKey = keyPrefix + '.' + this.username + '.refreshToken';\n\t      var lastUserKey = keyPrefix + '.LastAuthUser';\n\t      var scopeKey = keyPrefix + '.' + this.username + '.tokenScopesString';\n\t\n\t      this.storage.removeItem(idTokenKey);\n\t      this.storage.removeItem(accessTokenKey);\n\t      this.storage.removeItem(refreshTokenKey);\n\t      this.storage.removeItem(lastUserKey);\n\t      this.storage.removeItem(scopeKey);\n\t    }\n\t\n\t    /**\n\t     * This is used to build a user session from tokens retrieved in the authentication result\n\t     * @param {object} refreshToken authResult Successful auth response from server.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'refreshSession',\n\t    value: function refreshSession(refreshToken) {\n\t      // https POST call for refreshing token\n\t      var url = this.getCognitoConstants().DOMAIN_SCHEME.concat(this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(), this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_TOKEN);\n\t      var header = this.getCognitoConstants().HEADER;\n\t      var body = { grant_type: this.getCognitoConstants().REFRESHTOKEN,\n\t        client_id: this.getClientId(),\n\t        redirect_uri: this.RedirectUriSignIn,\n\t        refresh_token: refreshToken };\n\t      var boundOnSuccess = this.onSuccessRefreshToken.bind(this);\n\t      var boundOnFailure = this.onFailure.bind(this);\n\t      this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\n\t    }\n\t\n\t    /**\n\t     * Make the http POST request.\n\t     * @param {JSON} header header JSON object\n\t     * @param {JSON} body body JSON object\n\t     * @param {string} url string\n\t     * @param {function} onSuccess callback\n\t     * @param {function} onFailure callback\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'makePOSTRequest',\n\t    value: function makePOSTRequest(header, body, url, onSuccess, onFailure) {\n\t      // This is a sample server that supports CORS.\n\t      var xhr = this.createCORSRequest(this.getCognitoConstants().POST, url);\n\t      var bodyString = '';\n\t      if (!xhr) {\n\t        return;\n\t      }\n\t      // set header\n\t      for (var key in header) {\n\t        xhr.setRequestHeader(key, header[key]);\n\t      }\n\t      for (var _key in body) {\n\t        bodyString = bodyString.concat(_key, this.getCognitoConstants().EQUALSIGN, body[_key], this.getCognitoConstants().AMPERSAND);\n\t      }\n\t      bodyString = bodyString.substring(0, bodyString.length - 1);\n\t      xhr.send(bodyString);\n\t      xhr.onreadystatechange = function addressState() {\n\t        if (xhr.readyState === 4) {\n\t          if (xhr.status === 200) {\n\t            onSuccess(xhr.responseText);\n\t          } else {\n\t            onFailure(xhr.responseText);\n\t          }\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Create the XHR object\n\t     * @param {string} method which method to call\n\t     * @param {string} url the url string\n\t     * @returns {object} xhr\n\t     */\n\t\n\t  }, {\n\t    key: 'createCORSRequest',\n\t    value: function createCORSRequest(method, url) {\n\t      var xhr = new XMLHttpRequest();\n\t      xhr.open(method, url, true);\n\t      if (this.getCognitoConstants().WITHCREDENTIALS in xhr) {\n\t        // XHR for Chrome/Firefox/Opera/Safari.\n\t        xhr.open(method, url, true);\n\t      } else if ((typeof XDomainRequest === 'undefined' ? 'undefined' : _typeof(XDomainRequest)) !== this.getCognitoConstants().UNDEFINED) {\n\t        // XDomainRequest for IE.\n\t        xhr = new XDomainRequest();\n\t        xhr.open(method, url);\n\t      } else {\n\t        // CORS not supported.\n\t        xhr = null;\n\t      }\n\t      return xhr;\n\t    }\n\t\n\t    /**\n\t     * The http POST request onFailure callback.\n\t     * @param {object} err the error object\n\t     * @returns {function} onFailure\n\t     */\n\t\n\t  }, {\n\t    key: 'onFailure',\n\t    value: function onFailure(err) {\n\t      this.userhandler.onFailure(err);\n\t    }\n\t\n\t    /**\n\t     * The http POST request onSuccess callback when refreshing tokens.\n\t     * @param {JSON} jsonData tokens\n\t     */\n\t\n\t  }, {\n\t    key: 'onSuccessRefreshToken',\n\t    value: function onSuccessRefreshToken(jsonData) {\n\t      var jsonDataObject = JSON.parse(jsonData);\n\t      if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().ERROR)) {\n\t        var URL = this.getFQDNSignIn();\n\t        this.launchUri(URL);\n\t      } else {\n\t        if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().IDTOKEN)) {\n\t          this.signInUserSession.setIdToken(new _CognitoIdToken2.default(jsonDataObject.id_token));\n\t        }\n\t        if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().ACCESSTOKEN)) {\n\t          this.signInUserSession.setAccessToken(new _CognitoAccessToken3.default(jsonDataObject.access_token));\n\t        }\n\t        this.cacheTokensScopes();\n\t        this.userhandler.onSuccess(this.signInUserSession);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The http POST request onSuccess callback when exchanging code for tokens.\n\t     * @param {JSON} jsonData tokens\n\t     */\n\t\n\t  }, {\n\t    key: 'onSuccessExchangeForToken',\n\t    value: function onSuccessExchangeForToken(jsonData) {\n\t      var jsonDataObject = JSON.parse(jsonData);\n\t      var refreshToken = new _CognitoRefreshToken2.default();\n\t      var accessToken = new _CognitoAccessToken3.default();\n\t      var idToken = new _CognitoIdToken2.default();\n\t      var state = null;\n\t      if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().ERROR)) {\n\t        return this.userhandler.onFailure(jsonData);\n\t      }\n\t      if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().IDTOKEN)) {\n\t        this.signInUserSession.setIdToken(new _CognitoIdToken2.default(jsonDataObject.id_token));\n\t      } else {\n\t        this.signInUserSession.setIdToken(idToken);\n\t      }\n\t      if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().ACCESSTOKEN)) {\n\t        this.signInUserSession.setAccessToken(new _CognitoAccessToken3.default(jsonDataObject.access_token));\n\t      } else {\n\t        this.signInUserSession.setAccessToken(accessToken);\n\t      }\n\t      if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().REFRESHTOKEN)) {\n\t        this.signInUserSession.setRefreshToken(new _CognitoRefreshToken2.default(jsonDataObject.refresh_token));\n\t      } else {\n\t        this.signInUserSession.setRefreshToken(refreshToken);\n\t      }\n\t      this.cacheTokensScopes();\n\t      this.userhandler.onSuccess(this.signInUserSession);\n\t    }\n\t\n\t    /**\n\t     * Launch Cognito Auth UI page.\n\t     * @param {string} URL the url to launch\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'launchUri',\n\t    value: function launchUri(URL) {\n\t      window.open(URL, this.getCognitoConstants().SELF);\n\t    }\n\t\n\t    /**\n\t     * @returns {string} scopes string\n\t     */\n\t\n\t  }, {\n\t    key: 'getSpaceSeperatedScopeString',\n\t    value: function getSpaceSeperatedScopeString() {\n\t      var tokenScopesString = this.signInUserSession.getTokenScopes().getScopes();\n\t      tokenScopesString = tokenScopesString.join(this.getCognitoConstants().SPACE);\n\t      return encodeURIComponent(tokenScopesString);\n\t    }\n\t\n\t    /**\n\t     * Create the FQDN(fully qualified domain name) for authorization endpoint.\n\t     * @returns {string} url\n\t     */\n\t\n\t  }, {\n\t    key: 'getFQDNSignIn',\n\t    value: function getFQDNSignIn() {\n\t      if (this.state == null) {\n\t        this.state = this.generateRandomString(this.getCognitoConstants().STATELENGTH, this.getCognitoConstants().STATEORIGINSTRING);\n\t      }\n\t\n\t      var identityProviderParam = this.IdentityProvider ? this.getCognitoConstants().AMPERSAND.concat(this.getCognitoConstants().DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER, this.getCognitoConstants().EQUALSIGN, this.IdentityProvider) : '';\n\t      var tokenScopesString = this.getSpaceSeperatedScopeString();\n\t\n\t      var userContextDataParam = '';\n\t      var userContextData = this.getUserContextData();\n\t      if (userContextData) {\n\t        userContextDataParam = this.getCognitoConstants().AMPERSAND + this.getCognitoConstants().DOMAIN_QUERY_PARAM_USERCONTEXTDATA + this.getCognitoConstants().EQUALSIGN + this.getUserContextData();\n\t      }\n\t\n\t      // Build the complete web domain to launch the login screen\n\t      var uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(), this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNIN, this.getCognitoConstants().QUESTIONMARK, this.getCognitoConstants().DOMAIN_QUERY_PARAM_REDIRECT_URI, this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignIn), this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().DOMAIN_QUERY_PARAM_RESPONSE_TYPE, this.getCognitoConstants().EQUALSIGN, this.responseType, this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().CLIENT_ID, this.getCognitoConstants().EQUALSIGN, this.getClientId(), this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().STATE, this.getCognitoConstants().EQUALSIGN, this.state, this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().SCOPE, this.getCognitoConstants().EQUALSIGN, tokenScopesString, identityProviderParam, userContextDataParam);\n\t\n\t      return uri;\n\t    }\n\t\n\t    /**\n\t     * Sign out the user.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'signOut',\n\t    value: function signOut() {\n\t      var URL = this.getFQDNSignOut();\n\t      this.signInUserSession = null;\n\t      this.clearCachedTokensScopes();\n\t      this.launchUri(URL);\n\t    }\n\t\n\t    /**\n\t     * Create the FQDN(fully qualified domain name) for signout endpoint.\n\t     * @returns {string} url\n\t     */\n\t\n\t  }, {\n\t    key: 'getFQDNSignOut',\n\t    value: function getFQDNSignOut() {\n\t      var uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(), this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNOUT, this.getCognitoConstants().QUESTIONMARK, this.getCognitoConstants().DOMAIN_QUERY_PARAM_SIGNOUT_URI, this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignOut), this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().CLIENT_ID, this.getCognitoConstants().EQUALSIGN, this.getClientId());\n\t      return uri;\n\t    }\n\t\n\t    /**\n\t     * This method returns the encoded data string used for cognito advanced security feature.\n\t     * This would be generated only when developer has included the JS used for collecting the\n\t     * data on their client. Please refer to documentation to know more about using AdvancedSecurity\n\t     * features\n\t     **/\n\t\n\t  }, {\n\t    key: 'getUserContextData',\n\t    value: function getUserContextData() {\n\t      if (typeof AmazonCognitoAdvancedSecurityData === \"undefined\") {\n\t        return;\n\t      }\n\t\n\t      var _username = \"\";\n\t      if (this.username) {\n\t        _username = this.username;\n\t      }\n\t\n\t      var _userpoolId = \"\";\n\t      if (this.userpoolId) {\n\t        _userpoolId = this.userpoolId;\n\t      }\n\t\n\t      if (this.advancedSecurityDataCollectionFlag) {\n\t        return AmazonCognitoAdvancedSecurityData.getData(_username, _userpoolId, this.clientId);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Helper method to let the user know if he has either a valid cached session \n\t     * or a valid authenticated session from the app integration callback.\n\t     * @returns {boolean} userSignedIn \n\t     */\n\t\n\t  }, {\n\t    key: 'isUserSignedIn',\n\t    value: function isUserSignedIn() {\n\t      return this.getCachedSession() != null && this.getCachedSession().isValid() || this.signInUserSession != null && this.signInUserSession.isValid();\n\t    }\n\t  }]);\n\t\n\t  return CognitoAuth;\n\t}();\n\t\n\texports.default = CognitoAuth;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Amazon Cognito Auth SDK for JavaScript\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\t\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\n\t * You may not use this file except in compliance with the License.\n\t * A copy of the License is located at\n\t *\n\t *         http://aws.amazon.com/apache2.0/\n\t *\n\t * or in the \"license\" file accompanying this file.\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\n\t * License for the specific language governing permissions\n\t * and limitations under the License.\n\t */\n\tvar monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\tvar weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\t\n\t/** @class */\n\t\n\tvar DateHelper = function () {\n\t  function DateHelper() {\n\t    _classCallCheck(this, DateHelper);\n\t  }\n\t\n\t  _createClass(DateHelper, [{\n\t    key: 'getNowString',\n\t\n\t    /**\n\t     * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n\t     */\n\t    value: function getNowString() {\n\t      var now = new Date();\n\t\n\t      var weekDay = weekNames[now.getUTCDay()];\n\t      var month = monthNames[now.getUTCMonth()];\n\t      var day = now.getUTCDate();\n\t\n\t      var hours = now.getUTCHours();\n\t      if (hours < 10) {\n\t        hours = '0' + hours;\n\t      }\n\t\n\t      var minutes = now.getUTCMinutes();\n\t      if (minutes < 10) {\n\t        minutes = '0' + minutes;\n\t      }\n\t\n\t      var seconds = now.getUTCSeconds();\n\t      if (seconds < 10) {\n\t        seconds = '0' + seconds;\n\t      }\n\t\n\t      var year = now.getUTCFullYear();\n\t\n\t      // ddd MMM D HH:mm:ss UTC YYYY\n\t      var dateNow = weekDay + ' ' + month + ' ' + day + ' ' + hours + ':' + minutes + ':' + seconds + ' UTC ' + year;\n\t\n\t      return dateNow;\n\t    }\n\t  }]);\n\t\n\t  return DateHelper;\n\t}();\n\t\n\texports.default = DateHelper;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _CognitoAccessToken = __webpack_require__(1);\n\t\n\tObject.defineProperty(exports, 'CognitoAccessToken', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoAccessToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoIdToken = __webpack_require__(2);\n\t\n\tObject.defineProperty(exports, 'CognitoIdToken', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoIdToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoRefreshToken = __webpack_require__(3);\n\t\n\tObject.defineProperty(exports, 'CognitoRefreshToken', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoRefreshToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoTokenScopes = __webpack_require__(4);\n\t\n\tObject.defineProperty(exports, 'CognitoTokenScopes', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoTokenScopes).default;\n\t  }\n\t});\n\t\n\tvar _CognitoAuth = __webpack_require__(8);\n\t\n\tObject.defineProperty(exports, 'CognitoAuth', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoAuth).default;\n\t  }\n\t});\n\t\n\tvar _CognitoAuthSession = __webpack_require__(5);\n\t\n\tObject.defineProperty(exports, 'CognitoAuthSession', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoAuthSession).default;\n\t  }\n\t});\n\t\n\tvar _DateHelper = __webpack_require__(9);\n\t\n\tObject.defineProperty(exports, 'DateHelper', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_DateHelper).default;\n\t  }\n\t});\n\t\n\tvar _StorageHelper = __webpack_require__(6);\n\t\n\tObject.defineProperty(exports, 'StorageHelper', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_StorageHelper).default;\n\t  }\n\t});\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\t'use strict'\n\t\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\t\n\t// Support decoding URL-safe base64 strings, as Node.js does.\n\t// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\t\n\tfunction placeHoldersCount (b64) {\n\t  var len = b64.length\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // the number of equal signs (place holders)\n\t  // if there are two placeholders, than the two characters before it\n\t  // represent one byte\n\t  // if there is only one, then the three characters before it represent 2 bytes\n\t  // this is just a cheap hack to not do indexOf twice\n\t  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\t}\n\t\n\tfunction byteLength (b64) {\n\t  // base64 is 4/3 + up to two characters of the original data\n\t  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n\t}\n\t\n\tfunction toByteArray (b64) {\n\t  var i, l, tmp, placeHolders, arr\n\t  var len = b64.length\n\t  placeHolders = placeHoldersCount(b64)\n\t\n\t  arr = new Arr((len * 3 / 4) - placeHolders)\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  l = placeHolders > 0 ? len - 4 : len\n\t\n\t  var L = 0\n\t\n\t  for (i = 0; i < l; i += 4) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n\t    arr[L++] = (tmp >> 16) & 0xFF\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHolders === 2) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[L++] = tmp & 0xFF\n\t  } else if (placeHolders === 1) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var output = ''\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    output += lookup[tmp >> 2]\n\t    output += lookup[(tmp << 4) & 0x3F]\n\t    output += '=='\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n\t    output += lookup[tmp >> 10]\n\t    output += lookup[(tmp >> 4) & 0x3F]\n\t    output += lookup[(tmp << 2) & 0x3F]\n\t    output += '='\n\t  }\n\t\n\t  parts.push(output)\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = (nBytes * 8) - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = (nBytes * 8) - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = ((value * c) - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// amazon-cognito-auth.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5ae45717c9ce07a07f33","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport * as enhancements from './src';\n\nexport * from './src';\n\n// The version of crypto-browserify included by aws-sdk only\n// checks for window.crypto, not window.msCrypto as used by\n// IE 11 – so we set it explicitly here\nif (typeof window !== 'undefined' && !window.crypto && window.msCrypto) {\n  window.crypto = window.msCrypto;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./enhance.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { Buffer } from 'buffer/';\n\n/** @class */\nexport default class CognitoAccessToken {\n  /**\n   * Constructs a new CognitoAccessToken object\n   * @param {string=} AccessToken The JWT access token.\n   */\n  constructor(AccessToken) {\n    // Assign object\n    this.jwtToken = AccessToken || '';\n    this.payload = this.decodePayload();\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  getJwtToken() {\n    return this.jwtToken;\n  }\n\n  /**\n   * Sets new value for access token.\n   * @param {string=} accessToken The JWT access token.\n   * @returns {void}\n   */\n  setJwtToken(accessToken) {\n    this.jwtToken = accessToken;\n  }\n\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n  getExpiration() {\n    return this.payload.exp;\n  }\n\n  /**\n   * @returns {string} the username from payload.\n   */\n  getUsername() {\n    if (this.jwtToken === null) {\n      return undefined;\n    }\n    return this.payload.username;\n  }\n\n  /**\n   * @returns {object} the token's payload.\n   */\n  decodePayload() {\n    const payload = this.jwtToken.split('.')[1];\n    try {\n      return JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n    } catch (err) {\n      return {};\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoAccessToken.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { Buffer } from 'buffer/';\n\n/** @class */\nexport default class CognitoIdToken {\n  /**\n   * Constructs a new CognitoIdToken object\n   * @param {string=} IdToken The JWT Id token\n   */\n  constructor(IdToken) {\n    // Assign object\n    this.jwtToken = IdToken || '';\n    this.payload = this.decodePayload();\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  getJwtToken() {\n    return this.jwtToken;\n  }\n\n  /**\n   * Sets new value for id token.\n   * @param {string=} idToken The JWT Id token\n   * @returns {void}\n   */\n  setJwtToken(idToken) {\n    this.jwtToken = idToken;\n  }\n\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n  getExpiration() {\n    return this.payload.exp;\n  }\n\n  /**\n   * @returns {object} the token's payload.\n   */\n  decodePayload() {\n    const payload = this.jwtToken.split('.')[1];\n    try {\n      return JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n    } catch (err) {\n      return {};\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoIdToken.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\n/** @class */\nexport default class CognitoRefreshToken {\n  /**\n   * Constructs a new CognitoRefreshToken object\n   * @param {string=} RefreshToken The JWT refresh token.\n   */\n  constructor(RefreshToken) {\n    // Assign object\n    this.refreshToken = RefreshToken || '';\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  getToken() {\n    return this.refreshToken;\n  }\n\n  /**\n   * Sets new value for refresh token.\n   * @param {string=} refreshToken The JWT refresh token.\n   * @returns {void}\n   */\n  setToken(refreshToken) {\n    this.refreshToken = refreshToken;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoRefreshToken.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\n/** @class */\nexport default class CognitoTokenScopes {\n  /**\n   * Constructs a new CognitoTokenScopes object\n   * @param {array=} TokenScopesArray The token scopes\n   */\n  constructor(TokenScopesArray) {\n    // Assign object\n    this.tokenScopes = TokenScopesArray || [];\n  }\n\n  /**\n   * @returns {Array} the token scopes.\n   */\n  getScopes() {\n    return this.tokenScopes;\n  }\n\n  /**\n   * Sets new value for token scopes.\n   * @param {array=} tokenScopes The token scopes\n   * @returns {void}\n   */\n  setTokenScopes(tokenScopes) {\n    this.tokenScopes = tokenScopes;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoTokenScopes.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport CognitoTokenScopes from './CognitoTokenScopes';\nimport CognitoAccessToken from './CognitoAccessToken';\nimport CognitoIdToken from './CognitoIdToken';\nimport CognitoRefreshToken from './CognitoRefreshToken';\n\n/** @class */\nexport default class CognitoAuthSession {\n\t/**\n\t * Constructs a new CognitoUserSession object\n\t * @param {CognitoIdToken} IdToken The session's Id token.\n\t * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\n\t * @param {CognitoAccessToken} AccessToken The session's access token.\n\t * @param {array}  TokenScopes  The session's token scopes.\n   * @param {string} State The session's state. \n\t */\n  constructor({ IdToken, RefreshToken, AccessToken, TokenScopes, State } = {}) {\n    if (IdToken) {\n      this.idToken = IdToken;\n    } else {\n      this.idToken = new CognitoIdToken();\n    }\n    if (RefreshToken) {\n      this.refreshToken = RefreshToken;\n    } else {\n      this.refreshToken = new CognitoRefreshToken();\n    }\n    if (AccessToken) {\n      this.accessToken = AccessToken;\n    } else {\n      this.accessToken = new CognitoAccessToken();\n    }\n    if (TokenScopes) {\n      this.tokenScopes = TokenScopes;\n    } else {\n      this.tokenScopes = new CognitoTokenScopes();\n    }\n    if (State) {\n      this.state = State;\n    } else {\n      this.state = null;\n    }\n  }\n\n  /**\n   * @returns {CognitoIdToken} the session's Id token\n   */\n  getIdToken() {\n    return this.idToken;\n  }\n\n  /**\n   * Set a new Id token\n   * @param {CognitoIdToken} IdToken The session's Id token.\n   * @returns {void}\n   */\n  setIdToken(IdToken) {\n    this.idToken = IdToken;\n  }\n\n  /**\n   * @returns {CognitoRefreshToken} the session's refresh token\n   */\n  getRefreshToken() {\n    return this.refreshToken;\n  }\n\n  /**\n   * Set a new Refresh token\n   * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\n   * @returns {void}\n   */\n  setRefreshToken(RefreshToken) {\n    this.refreshToken = RefreshToken;\n  }\n\n  /**\n   * @returns {CognitoAccessToken} the session's access token\n   */\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  /**\n   * Set a new Access token\n   * @param {CognitoAccessToken} AccessToken The session's access token.\n   * @returns {void}\n   */\n  setAccessToken(AccessToken) {\n    this.accessToken = AccessToken;\n  }\n\n  /**\n   * @returns {CognitoTokenScopes} the session's token scopes\n   */\n  getTokenScopes() {\n    return this.tokenScopes;\n  }\n\n  /**\n   * Set new token scopes\n   * @param {array}  tokenScopes  The session's token scopes.\n   * @returns {void}\n   */\n  setTokenScopes(tokenScopes) {\n    this.tokenScopes = tokenScopes;\n  }\n\n  /**\n   * @returns {string} the session's state\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Set new state\n   * @param {string}  state  The session's state.\n   * @returns {void}\n   */\n  setState(State) {\n    this.state = State;\n  }\n\n  /**\n   * Checks to see if the session is still valid based on session expiry information found\n   * in Access and Id Tokens and the current time\n   * @returns {boolean} if the session is still valid\n   */\n  isValid() {\n    const now = Math.floor(new Date() / 1000);\n    try {\n      if (this.accessToken != null) {\n        return now < this.accessToken.getExpiration();\n      }\n      if (this.idToken != null) {\n        return now < this.idToken.getExpiration();\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoAuthSession.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\nlet dataMemory = {};\n\n/** @class */\nclass MemoryStorage {\n\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  static setItem(key, value) {\n    dataMemory[key] = value;\n    return dataMemory[key];\n  }\n\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  static getItem(key) {\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  }\n\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  static removeItem(key) {\n    return delete dataMemory[key];\n  }\n\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  static clear() {\n    dataMemory = {};\n    return dataMemory;\n  }\n}\n\n/** @class */\nexport default class StorageHelper {\n\n  /**\n   * This is used to get a storage object\n   * @returns {object} the storage\n   */\n  constructor() {\n    try {\n      this.storageWindow = window.localStorage;\n      this.storageWindow.setItem('aws.cognito.test-ls', 1);\n      this.storageWindow.removeItem('aws.cognito.test-ls');\n    } catch (exception) {\n      this.storageWindow = MemoryStorage;\n    }\n  }\n\n  /**\n   * This is used to return the storage\n   * @returns {object} the storage\n   */\n  getStorage() {\n    return this.storageWindow;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/StorageHelper.js","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 7\n// module chunks = 0","/*!\n  * Amazon Cognito Auth SDK for JavaScript\n  * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\").\n  * You may not use this file except in compliance with the License.\n  * A copy of the License is located at\n  *\n  *         http://aws.amazon.com/apache2.0/\n  *\n  * or in the \"license\" file accompanying this file.\n  * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n  * OR CONDITIONS OF ANY KIND, either express or implied. See the\n  * License for the specific language governing permissions\n  * and limitations under the License.\n  */\n\n  import CognitoTokenScopes from './CognitoTokenScopes';\n  import CognitoAccessToken from './CognitoAccessToken';\n  import CognitoIdToken from './CognitoIdToken';\n  import CognitoRefreshToken from './CognitoRefreshToken';\n  import CognitoAuthSession from './CognitoAuthSession';\n  import StorageHelper from './StorageHelper';\n  \n  /** @class */\n  export default class CognitoAuth {\n    /**\n     * Constructs a new CognitoAuth object\n     * @param {object} data Creation options\n     * @param {string} data.ClientId Required: User pool application client id.\n     * @param {string} data.AppWebDomain Required: The application/user-pools Cognito web hostname,\n     *                     this is set at the Cognito console.\n     * @param {array} data.TokenScopesArray Optional: The token scopes\n     * @param {string} data.RedirectUriSignIn Required: The redirect Uri,\n     * which will be launched after authentication as signed in.\n     * @param {string} data.RedirectUriSignOut Required:\n     * The redirect Uri, which will be launched when signed out.\n     * @param {string} data.IdentityProvider Optional: Pre-selected identity provider (this allows to\n     * automatically trigger social provider authentication flow).\n     * @param {string} data.UserPoolId Optional: UserPoolId for the configured cognito userPool.\n     * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional: boolean flag indicating if the\n     *        data collection is enabled to support cognito advanced security features. By default, this\n     *        flag is set to true.\n     * @param {nodeCallback<CognitoAuthSession>} Optional: userhandler Called on success or error.\n     */\n    constructor(data) {\n      const { ClientId, AppWebDomain, TokenScopesArray,\n      RedirectUriSignIn, RedirectUriSignOut, IdentityProvider, UserPoolId,\n      AdvancedSecurityDataCollectionFlag } = data || { };\n      if (data == null || !ClientId || !AppWebDomain || !RedirectUriSignIn || !RedirectUriSignOut) {\n        throw new Error(this.getCognitoConstants().PARAMETERERROR);\n      }\n  \n      this.clientId = ClientId;\n      this.appWebDomain = AppWebDomain;\n      this.TokenScopesArray = TokenScopesArray || [];\n      if (!Array.isArray(TokenScopesArray)) {\n        throw new Error(this.getCognitoConstants().SCOPETYPEERROR);\n      }\n      const tokenScopes = new CognitoTokenScopes(this.TokenScopesArray);\n      this.RedirectUriSignIn = RedirectUriSignIn;\n      this.RedirectUriSignOut = RedirectUriSignOut;\n      this.IdentityProvider = IdentityProvider;\n      this.signInUserSession = new CognitoAuthSession();\n      this.responseType = this.getCognitoConstants().TOKEN;\n      this.storage = new StorageHelper().getStorage();\n      this.signInUserSession.setTokenScopes(tokenScopes);\n      this.username = this.getLastUser();\n      this.userPoolId = UserPoolId;\n  \n      /**\n       * By default, AdvancedSecurityDataCollectionFlag is set to true, if no input value is provided.\n       */\n      this.advancedSecurityDataCollectionFlag = true;\n      if (AdvancedSecurityDataCollectionFlag) {\n        this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag;\n      }\n    }\n  \n    /**\n     * @returns {JSON} the constants\n     */\n    getCognitoConstants() {\n      const CognitoConstants = {\n        DOMAIN_SCHEME: 'https',\n        DOMAIN_PATH_SIGNIN: 'oauth2/authorize',\n        DOMAIN_PATH_TOKEN: 'oauth2/token',\n        DOMAIN_PATH_SIGNOUT: 'logout',\n        DOMAIN_QUERY_PARAM_REDIRECT_URI: 'redirect_uri',\n        DOMAIN_QUERY_PARAM_SIGNOUT_URI: 'logout_uri',\n        DOMAIN_QUERY_PARAM_RESPONSE_TYPE: 'response_type',\n        DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER: 'identity_provider',\n        DOMAIN_QUERY_PARAM_USERCONTEXTDATA: 'userContextData',\n        CLIENT_ID: 'client_id',\n        STATE: 'state',\n        SCOPE: 'scope',\n        TOKEN: 'token',\n        CODE: 'code',\n        POST: 'POST',\n        PARAMETERERROR: 'The parameters: App client Id, App web domain' +\n                        ', the redirect URL when you are signed in and the ' +\n                        'redirect URL when you are signed out are required.',\n        SCOPETYPEERROR: 'Scopes have to be array type. ',\n        QUESTIONMARK: '?',\n        POUNDSIGN: '#',\n        COLONDOUBLESLASH: '://',\n        SLASH: '/',\n        AMPERSAND: '&',\n        EQUALSIGN: '=',\n        SPACE: ' ',\n        CONTENTTYPE: 'Content-Type',\n        CONTENTTYPEVALUE: 'application/x-www-form-urlencoded',\n        AUTHORIZATIONCODE: 'authorization_code',\n        IDTOKEN: 'id_token',\n        ACCESSTOKEN: 'access_token',\n        REFRESHTOKEN: 'refresh_token',\n        ERROR: 'error',\n        STRINGTYPE: 'string',\n        STATELENGTH: 32,\n        STATEORIGINSTRING: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n        WITHCREDENTIALS: 'withCredentials',\n        UNDEFINED: 'undefined',\n        SELF: '_self',\n        HOSTNAMEREGEX: /:\\/\\/([0-9]?\\.)?(.[^/:]+)/i,\n        QUERYPARAMETERREGEX1: /#(.+)/,\n        QUERYPARAMETERREGEX2: /=(.+)/,\n        HEADER: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      };\n      return CognitoConstants;\n    }\n  \n    /**\n     * @returns {string} the client id\n     */\n    getClientId() {\n      return this.clientId;\n    }\n  \n    /**\n     * @returns {string} the app web domain\n     */\n    getAppWebDomain() {\n      return this.appWebDomain;\n    }\n  \n    /**\n     * method for getting the current user of the application from the local storage\n     *\n     * @returns {CognitoAuth} the user retrieved from storage\n     */\n    getCurrentUser() {\n      const lastUserKey = `CognitoIdentityServiceProvider.${this.clientId}.LastAuthUser`;\n  \n      const lastAuthUser = this.storage.getItem(lastUserKey);\n      return lastAuthUser;\n    }\n  \n    /**\n     * @param {string} Username the user's name\n     * method for setting the current user's name\n     * @returns {void}\n     */\n    setUser(Username) {\n      this.username = Username;\n    }\n  \n    /**\n     * sets response type to 'code'\n     * @returns {void}\n     */\n    useCodeGrantFlow() {\n      this.responseType = this.getCognitoConstants().CODE;\n    }\n  \n    /**\n     * sets response type to 'token'\n     * @returns {void}\n     */\n    useImplicitFlow() {\n      this.responseType = this.getCognitoConstants().TOKEN;\n    }\n  \n    /**\n     * @returns {CognitoAuthSession} the current session for this user\n     */\n    getSignInUserSession() {\n      return this.signInUserSession;\n    }\n  \n    /**\n     * @returns {string} the user's username\n     */\n    getUsername() {\n      return this.username;\n    }\n  \n    /**\n     * @param {string} Username the user's username\n     * @returns {void}\n     */\n    setUsername(Username) {\n      this.username = Username;\n    }\n\n    /**\n     * @returns {string} the user's state\n     */\n    getState() {\n      return this.state;\n    }\n\n    /**\n     * @param {string} State the user's state\n     * @returns {void}\n     */\n    setState(State) {\n      this.state = State;\n    }\n  \n    /**\n     * This is used to get a session, either from the session object\n     * or from the local storage, or by using a refresh token\n     * @param {string} RedirectUriSignIn Required: The redirect Uri,\n     * which will be launched after authentication.\n     * @param {array} TokenScopesArray Required: The token scopes, it is an\n     * array of strings specifying all scopes for the tokens.\n     * @returns {void}\n     */\n    getSession() {\n      const tokenScopesInputSet = new Set(this.TokenScopesArray);\n      const cachedScopesSet = new Set(this.signInUserSession.tokenScopes.getScopes());\n      const URL = this.getFQDNSignIn();\n      if (this.signInUserSession != null && this.signInUserSession.isValid()) {\n        return this.userhandler.onSuccess(this.signInUserSession);\n      }\n      this.signInUserSession = this.getCachedSession();\n      // compare scopes\n      if (!this.compareSets(tokenScopesInputSet, cachedScopesSet)) {\n        const tokenScopes = new CognitoTokenScopes(this.TokenScopesArray);\n        const idToken = new CognitoIdToken();\n        const accessToken = new CognitoAccessToken();\n        const refreshToken = new CognitoRefreshToken();\n        this.signInUserSession.setTokenScopes(tokenScopes);\n        this.signInUserSession.setIdToken(idToken);\n        this.signInUserSession.setAccessToken(accessToken);\n        this.signInUserSession.setRefreshToken(refreshToken);\n        this.launchUri(URL);\n      } else if (this.signInUserSession.isValid()) {\n        return this.userhandler.onSuccess(this.signInUserSession);\n      } else if (!this.signInUserSession.getRefreshToken()\n      || !this.signInUserSession.getRefreshToken().getToken()) {\n        this.launchUri(URL);\n      } else {\n        this.refreshSession(this.signInUserSession.getRefreshToken().getToken());\n      }\n      return undefined;\n    }\n  \n    /**\n     * @param {string} httpRequestResponse the http request response\n     * @returns {void}\n     * Parse the http request response and proceed according to different response types.\n     */\n    parseCognitoWebResponse(httpRequestResponse) {\n      if (httpRequestResponse.indexOf(this.getCognitoConstants().QUESTIONMARK) > -1) {\n        this.getCodeQueryParameter(httpRequestResponse);\n      } else if (httpRequestResponse.indexOf(this.getCognitoConstants().POUNDSIGN) > -1) {\n        // To parse the response to get tokens\n        this.getTokenQueryParameter(httpRequestResponse);\n      }\n    }\n  \n    /**\n     * @param {string} httpRequestResponse the http request response\n     * @returns {void}\n     * Parse the http request response and proceed according to code response type.\n     */\n    getCodeQueryParameter(httpRequestResponse) {\n      const map = this.getQueryParameters(\n        httpRequestResponse,\n        this.getCognitoConstants().QUESTIONMARK\n      );\n      const state = null;\n      if (map.has(this.getCognitoConstants().STATE)) {\n        this.signInUserSession.setState(map.get(this.getCognitoConstants().STATE));\n      } else {\n        this.signInUserSession.setState(state);\n      }\n\n      if (map.has(this.getCognitoConstants().CODE)) {\n        // if the response contains code\n        // To parse the response and get the code value.\n        const codeParameter = map.get(this.getCognitoConstants().CODE);\n        const url = this.getCognitoConstants().DOMAIN_SCHEME.concat(\n        this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\n        this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_TOKEN);\n        const header = this.getCognitoConstants().HEADER;\n        const body = { grant_type: this.getCognitoConstants().AUTHORIZATIONCODE,\n          client_id: this.getClientId(),\n          redirect_uri: this.RedirectUriSignIn,\n          code: codeParameter };\n        const boundOnSuccess = (this.onSuccessExchangeForToken).bind(this);\n        const boundOnFailure = (this.onFailure).bind(this);\n        this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\n      }\n    }\n  \n    /**\n     * Parse the http request response and proceed according to token response type.\n     * @param {string} httpRequestResponse the http request response\n     * @returns {void}\n     */\n    getTokenQueryParameter(httpRequestResponse) {\n      const map = this.getQueryParameters(\n        httpRequestResponse,\n        this.getCognitoConstants().QUERYPARAMETERREGEX1\n      );\n      const idToken = new CognitoIdToken();\n      const accessToken = new CognitoAccessToken();\n      const refreshToken = new CognitoRefreshToken();\n      const state = null;\n      if (map.has(this.getCognitoConstants().IDTOKEN)) {\n        idToken.setJwtToken(map.get(this.getCognitoConstants().IDTOKEN));\n        this.signInUserSession.setIdToken(idToken);\n      } else {\n        this.signInUserSession.setIdToken(idToken);\n      }\n      if (map.has(this.getCognitoConstants().ACCESSTOKEN)) {\n        this.signInUserSession.setAccessToken(new _CognitoAccessToken2.default(map.get(this.getCognitoConstants().ACCESSTOKEN)));\n      } else {\n        this.signInUserSession.setAccessToken(accessToken);\n      }\n      if (map.has(this.getCognitoConstants().REFRESHTOKEN)) {\n        refreshToken.setToken(map.get(this.getCognitoConstants().REFRESHTOKEN));\n        this.signInUserSession.setRefreshToken(refreshToken);\n      } else {\n        this.signInUserSession.setRefreshToken(refreshToken);\n      }\n      if (map.has(this.getCognitoConstants().STATE)) {\n        this.signInUserSession.setState(map.get(this.getCognitoConstants().STATE));\n      } else {\n        this.signInUserSession.setState(state);\n      }\n      this.cacheTokensScopes();\n      return this.userhandler.onSuccess(this.signInUserSession); \n    }\n  \n    /**\n     * Get cached tokens and scopes and return a new session using all the cached data.\n     * @returns {CognitoAuthSession} the auth session\n     */\n    getCachedSession() {\n      if (!this.username) {\n        return new CognitoAuthSession();\n      }\n      const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}.${this.username}`;\n      const idTokenKey = `${keyPrefix}.idToken`;\n      const accessTokenKey = `${keyPrefix}.accessToken`;\n      const refreshTokenKey = `${keyPrefix}.refreshToken`;\n      const scopeKey = `${keyPrefix}.tokenScopesString`;\n  \n      const scopesString = this.storage.getItem(scopeKey);\n      let scopesArray = [];\n      if (scopesString) {\n        scopesArray = scopesString.split(' ');\n      }\n      const tokenScopes = new CognitoTokenScopes(scopesArray);\n      const idToken = new CognitoIdToken(this.storage.getItem(idTokenKey));\n      const accessToken = new CognitoAccessToken(this.storage.getItem(accessTokenKey));\n      const refreshToken = new CognitoRefreshToken(this.storage.getItem(refreshTokenKey));\n  \n      const sessionData = {\n        IdToken: idToken,\n        AccessToken: accessToken,\n        RefreshToken: refreshToken,\n        TokenScopes: tokenScopes,\n      };\n      const cachedSession = new CognitoAuthSession(sessionData);\n      return cachedSession;\n    }\n  \n    /**\n     * This is used to get last signed in user from local storage\n     * @returns {string} the last user name\n     */\n    getLastUser() {\n      const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}`;\n      const lastUserKey = `${keyPrefix}.LastAuthUser`;\n      const lastUserName = this.storage.getItem(lastUserKey);\n      if (lastUserName) {\n        return lastUserName;\n      }\n      return undefined;\n    }\n  \n    /**\n     * This is used to save the session tokens and scopes to local storage\n     * Input parameter is a set of strings.\n     * @returns {void}\n     */\n    cacheTokensScopes() {\n      const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}`;\n      const tokenUserName = this.signInUserSession.getAccessToken().getUsername();\n      this.username = tokenUserName;\n      const idTokenKey = `${keyPrefix}.${tokenUserName}.idToken`;\n      const accessTokenKey = `${keyPrefix}.${tokenUserName}.accessToken`;\n      const refreshTokenKey = `${keyPrefix}.${tokenUserName}.refreshToken`;\n      const lastUserKey = `${keyPrefix}.LastAuthUser`;\n      const scopeKey = `${keyPrefix}.${tokenUserName}.tokenScopesString`;\n      const scopesArray = this.signInUserSession.getTokenScopes().getScopes();\n      const scopesString = scopesArray.join(' ');\n      this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n      this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n      this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n      this.storage.setItem(lastUserKey, tokenUserName);\n      this.storage.setItem(scopeKey, scopesString);\n    }\n  \n    /**\n     * Compare two sets if they are identical.\n     * @param {set} set1 one set\n     * @param {set} set2 the other set\n     * @returns {boolean} boolean value is true if two sets are identical\n     */\n    compareSets(set1, set2) {\n      if (set1.size !== set2.size) {\n        return false;\n      }\n      for (const item of set1) {\n        if (!set2.has(item)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  \n    /**\n     * @param {string} url the url string\n     * Get the hostname from url.\n     * @returns {string} hostname string\n     */\n    getHostName(url) {\n      const match = url.match(this.getCognitoConstants().HOSTNAMEREGEX);\n      if (match != null && match.length > 2 && typeof match[2] ===\n      this.getCognitoConstants().STRINGTYPE && match[2].length > 0) {\n        return match[2];\n      }\n      return undefined;\n    }\n  \n    /**\n     * Get http query parameters and return them as a map.\n     * @param {string} url the url string\n     * @param {string} splitMark query parameters split mark (prefix)\n     * @returns {map} map\n     */\n    getQueryParameters(url, splitMark) {\n      const str = String(url).split(splitMark);\n      const url2 = str[1];\n      const str1 = String(url2).split(this.getCognitoConstants().AMPERSAND);\n      const num = str1.length;\n      const map = new Map();\n      let i;\n      for (i = 0; i < num; i++) {\n        str1[i] = String(str1[i]).split(this.getCognitoConstants().QUERYPARAMETERREGEX2);\n        map.set(str1[i][0], str1[i][1]);\n      }\n      return map;\n    }\n  \n    /**\n     * helper function to generate a random string\n     * @param {int} length the length of string\n     * @param {string} chars a original string\n     * @returns {string} a random value.\n     */\n    generateRandomString(length, chars) {\n      let result = '';\n      let i = length;\n      for (; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\n      return result;\n    }\n  \n    /**\n     * This is used to clear the session tokens and scopes from local storage\n     * @returns {void}\n     */\n    clearCachedTokensScopes() {\n      const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}`;\n      const idTokenKey = `${keyPrefix}.${this.username}.idToken`;\n      const accessTokenKey = `${keyPrefix}.${this.username}.accessToken`;\n      const refreshTokenKey = `${keyPrefix}.${this.username}.refreshToken`;\n      const lastUserKey = `${keyPrefix}.LastAuthUser`;\n      const scopeKey = `${keyPrefix}.${this.username}.tokenScopesString`;\n  \n      this.storage.removeItem(idTokenKey);\n      this.storage.removeItem(accessTokenKey);\n      this.storage.removeItem(refreshTokenKey);\n      this.storage.removeItem(lastUserKey);\n      this.storage.removeItem(scopeKey);\n    }\n  \n    /**\n     * This is used to build a user session from tokens retrieved in the authentication result\n     * @param {object} refreshToken authResult Successful auth response from server.\n     * @returns {void}\n     */\n    refreshSession(refreshToken) {\n      // https POST call for refreshing token\n      const url = this.getCognitoConstants().DOMAIN_SCHEME.concat(\n      this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\n      this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_TOKEN);\n      const header = this.getCognitoConstants().HEADER;\n      const body = { grant_type: this.getCognitoConstants().REFRESHTOKEN,\n        client_id: this.getClientId(),\n        redirect_uri: this.RedirectUriSignIn,\n        refresh_token: refreshToken };\n      const boundOnSuccess = (this.onSuccessRefreshToken).bind(this);\n      const boundOnFailure = (this.onFailure).bind(this);\n      this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\n    }\n  \n    /**\n     * Make the http POST request.\n     * @param {JSON} header header JSON object\n     * @param {JSON} body body JSON object\n     * @param {string} url string\n     * @param {function} onSuccess callback\n     * @param {function} onFailure callback\n     * @returns {void}\n     */\n    makePOSTRequest(header, body, url, onSuccess, onFailure) {\n      // This is a sample server that supports CORS.\n      const xhr = this.createCORSRequest(this.getCognitoConstants().POST, url);\n      let bodyString = '';\n      if (!xhr) {\n        return;\n      }\n      // set header\n      for (let key in header) {\n        xhr.setRequestHeader(key, header[key]);\n      }\n      for (let key in body) {\n        bodyString = bodyString.concat(key, this.getCognitoConstants().EQUALSIGN,\n        body[key], this.getCognitoConstants().AMPERSAND);\n      }\n      bodyString = bodyString.substring(0, bodyString.length - 1);\n      xhr.send(bodyString);\n      xhr.onreadystatechange = function addressState() {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            onSuccess(xhr.responseText);\n          } else {\n            onFailure(xhr.responseText);\n          }\n        }\n      };\n    }\n  \n    /**\n     * Create the XHR object\n     * @param {string} method which method to call\n     * @param {string} url the url string\n     * @returns {object} xhr\n     */\n    createCORSRequest(method, url) {\n      let xhr = new XMLHttpRequest();\n      xhr.open(method, url, true);\n      if (this.getCognitoConstants().WITHCREDENTIALS in xhr) {\n        // XHR for Chrome/Firefox/Opera/Safari.\n        xhr.open(method, url, true);\n      } else if (typeof XDomainRequest !== this.getCognitoConstants().UNDEFINED) {\n        // XDomainRequest for IE.\n        xhr = new XDomainRequest();\n        xhr.open(method, url);\n      } else {\n        // CORS not supported.\n        xhr = null;\n      }\n      return xhr;\n    }\n  \n    /**\n     * The http POST request onFailure callback.\n     * @param {object} err the error object\n     * @returns {function} onFailure\n     */\n    onFailure(err) {\n      this.userhandler.onFailure(err);\n    }\n  \n    /**\n     * The http POST request onSuccess callback when refreshing tokens.\n     * @param {JSON} jsonData tokens\n     */\n    onSuccessRefreshToken(jsonData) {\n      const jsonDataObject = JSON.parse(jsonData);\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n      this.getCognitoConstants().ERROR)) {\n        const URL = this.getFQDNSignIn();\n        this.launchUri(URL);\n      } else {\n        if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n        this.getCognitoConstants().IDTOKEN)) {\n          this.signInUserSession.setIdToken(new\n          CognitoIdToken(jsonDataObject.id_token));\n        }\n        if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n        this.getCognitoConstants().ACCESSTOKEN)) {\n          this.signInUserSession.setAccessToken(new\n          CognitoAccessToken(jsonDataObject.access_token));\n        }\n        this.cacheTokensScopes();\n        this.userhandler.onSuccess(this.signInUserSession);\n      }\n    }\n  \n    /**\n     * The http POST request onSuccess callback when exchanging code for tokens.\n     * @param {JSON} jsonData tokens\n     */\n    onSuccessExchangeForToken(jsonData) {\n      const jsonDataObject = JSON.parse(jsonData);\n      const refreshToken = new CognitoRefreshToken();\n      const accessToken = new CognitoAccessToken();\n      const idToken = new CognitoIdToken();\n      const state = null;\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n      this.getCognitoConstants().ERROR)) {\n        return this.userhandler.onFailure(jsonData);\n      }\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n      this.getCognitoConstants().IDTOKEN)) {\n        this.signInUserSession.setIdToken(\n        new CognitoIdToken(jsonDataObject.id_token));\n      } else {\n        this.signInUserSession.setIdToken(idToken);\n      }\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n      this.getCognitoConstants().ACCESSTOKEN)) {\n        this.signInUserSession.setAccessToken(new\n        CognitoAccessToken(jsonDataObject.access_token));\n      } else {\n        this.signInUserSession.setAccessToken(accessToken);\n      }\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n      this.getCognitoConstants().REFRESHTOKEN)) {\n        this.signInUserSession.setRefreshToken(new\n        CognitoRefreshToken(jsonDataObject.refresh_token));\n      } else {\n        this.signInUserSession.setRefreshToken(refreshToken);\n      }\n      this.cacheTokensScopes();\n      this.userhandler.onSuccess(this.signInUserSession);\n    }\n  \n    /**\n     * Launch Cognito Auth UI page.\n     * @param {string} URL the url to launch\n     * @returns {void}\n     */\n    launchUri(URL) {\n      window.open(URL, this.getCognitoConstants().SELF);\n    }\n  \n    /**\n     * @returns {string} scopes string\n     */\n    getSpaceSeperatedScopeString() {\n      let tokenScopesString = this.signInUserSession.getTokenScopes().getScopes();\n      tokenScopesString = tokenScopesString.join(this.getCognitoConstants().SPACE);\n      return encodeURIComponent(tokenScopesString);\n    }\n  \n    /**\n     * Create the FQDN(fully qualified domain name) for authorization endpoint.\n     * @returns {string} url\n     */\n    getFQDNSignIn() {\n      if (this.state == null) {\n        this.state = this.generateRandomString(this.getCognitoConstants().STATELENGTH,\n      this.getCognitoConstants().STATEORIGINSTRING);\n      }\n  \n      const identityProviderParam = this.IdentityProvider\n          ? this.getCognitoConstants().AMPERSAND.concat(\n              this.getCognitoConstants().DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER,\n              this.getCognitoConstants().EQUALSIGN, this.IdentityProvider)\n          : '';\n      const tokenScopesString = this.getSpaceSeperatedScopeString();\n  \n      var userContextDataParam = '';\n      var userContextData = this.getUserContextData();\n      if (userContextData) {\n        userContextDataParam = this.getCognitoConstants().AMPERSAND + this.getCognitoConstants().DOMAIN_QUERY_PARAM_USERCONTEXTDATA +\n                               this.getCognitoConstants().EQUALSIGN + this.getUserContextData();\n      }\n  \n      // Build the complete web domain to launch the login screen\n      const uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(\n      this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\n      this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNIN,\n      this.getCognitoConstants().QUESTIONMARK,\n      this.getCognitoConstants().DOMAIN_QUERY_PARAM_REDIRECT_URI,\n      this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignIn),\n      this.getCognitoConstants().AMPERSAND,\n      this.getCognitoConstants().DOMAIN_QUERY_PARAM_RESPONSE_TYPE,\n      this.getCognitoConstants().EQUALSIGN,\n      this.responseType, this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().CLIENT_ID,\n      this.getCognitoConstants().EQUALSIGN, this.getClientId(),\n      this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().STATE,\n      this.getCognitoConstants().EQUALSIGN, this.state, this.getCognitoConstants().AMPERSAND,\n      this.getCognitoConstants().SCOPE, this.getCognitoConstants().EQUALSIGN, tokenScopesString, identityProviderParam,\n      userContextDataParam);\n  \n      return uri;\n    }\n  \n    /**\n     * Sign out the user.\n     * @returns {void}\n     */\n    signOut() {\n      const URL = this.getFQDNSignOut();\n      this.signInUserSession = null;\n      this.clearCachedTokensScopes();\n      this.launchUri(URL);\n    }\n  \n    /**\n     * Create the FQDN(fully qualified domain name) for signout endpoint.\n     * @returns {string} url\n     */\n    getFQDNSignOut() {\n      const uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(\n      this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\n      this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNOUT,\n      this.getCognitoConstants().QUESTIONMARK,\n      this.getCognitoConstants().DOMAIN_QUERY_PARAM_SIGNOUT_URI,\n      this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignOut),\n      this.getCognitoConstants().AMPERSAND,\n      this.getCognitoConstants().CLIENT_ID,\n      this.getCognitoConstants().EQUALSIGN, this.getClientId());\n      return uri;\n    }\n  \n    /**\n     * This method returns the encoded data string used for cognito advanced security feature.\n     * This would be generated only when developer has included the JS used for collecting the\n     * data on their client. Please refer to documentation to know more about using AdvancedSecurity\n     * features\n     **/\n    getUserContextData() {\n      if (typeof AmazonCognitoAdvancedSecurityData === \"undefined\") {\n        return;\n      }\n  \n      var _username = \"\";\n      if (this.username){\n        _username = this.username;\n      }\n  \n      var _userpoolId = \"\";\n      if (this.userpoolId){\n        _userpoolId = this.userpoolId;\n      }\n  \n      if (this.advancedSecurityDataCollectionFlag) {\n        return AmazonCognitoAdvancedSecurityData.getData(_username, _userpoolId, this.clientId);\n      }\n    }\n\n    /**\n     * Helper method to let the user know if he has either a valid cached session \n     * or a valid authenticated session from the app integration callback.\n     * @returns {boolean} userSignedIn \n     */\n    isUserSignedIn() {\n     return ((this.getCachedSession() != null && this.getCachedSession().isValid() || \n       this.signInUserSession != null && this.signInUserSession.isValid()));\n    }\n  }\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoAuth.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\nconst monthNames =\n  ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n/** @class */\nexport default class DateHelper {\n  /**\n   * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n   */\n  getNowString() {\n    const now = new Date();\n\n    const weekDay = weekNames[now.getUTCDay()];\n    const month = monthNames[now.getUTCMonth()];\n    const day = now.getUTCDate();\n\n    let hours = now.getUTCHours();\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n\n    let minutes = now.getUTCMinutes();\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n\n    let seconds = now.getUTCSeconds();\n    if (seconds < 10) {\n      seconds = `0${seconds}`;\n    }\n\n    const year = now.getUTCFullYear();\n\n    // ddd MMM D HH:mm:ss UTC YYYY\n    const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\n\n    return dateNow;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/DateHelper.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\nexport { default as CognitoAccessToken } from './CognitoAccessToken';\nexport { default as CognitoIdToken } from './CognitoIdToken';\nexport { default as CognitoRefreshToken } from './CognitoRefreshToken';\nexport { default as CognitoTokenScopes } from './CognitoTokenScopes';\nexport { default as CognitoAuth } from './CognitoAuth';\nexport { default as CognitoAuthSession } from './CognitoAuthSession';\nexport { default as DateHelper } from './DateHelper';\nexport { default as StorageHelper } from './StorageHelper';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 11\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 12\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}